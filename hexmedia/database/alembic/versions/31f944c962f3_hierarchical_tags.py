"""hierarchical tags

Revision ID: 31f944c962f3
Revises: f1693edeff1b
Create Date: 2025-10-01 14:15:03.304101

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '31f944c962f3'
down_revision: Union[str, Sequence[str], None] = 'f1693edeff1b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag_group',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('data_origin', sa.Text(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('display_name', sa.String(length=128), nullable=False),
    sa.Column('cardinality', sa.Enum('SINGLE', 'MULTI', name='tag_cardinality'), server_default='MULTI', nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('path', sa.Text(), nullable=False),
    sa.Column('depth', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['hexmedia.tag_group.id'], name=op.f('fk_tag_group_parent_id_tag_group'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag_group')),
    sa.UniqueConstraint('parent_id', 'key', name='uq_taggroup_parent_key'),
    sa.UniqueConstraint('path', name='uq_taggroup_path'),
    schema='hexmedia'
    )
    op.create_unique_constraint('uq_media_tag_item_tag', 'media_tag', ['media_item_id', 'tag_id'], schema='hexmedia')
    op.add_column('tag', sa.Column('group_id', sa.UUID(), nullable=True), schema='hexmedia')
    op.add_column('tag', sa.Column('slug', sa.String(length=128), nullable=False), schema='hexmedia')
    op.add_column('tag', sa.Column('description', sa.Text(), nullable=True), schema='hexmedia')
    op.add_column('tag', sa.Column('parent_id', sa.UUID(), nullable=True), schema='hexmedia')
    op.alter_column('tag', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=128),
               existing_nullable=False,
               schema='hexmedia')
    op.create_unique_constraint('uq_tag_group_slug', 'tag', ['group_id', 'slug'], schema='hexmedia')
    op.create_foreign_key(op.f('fk_tag_parent_id_tag'), 'tag', 'tag', ['parent_id'], ['id'], source_schema='hexmedia', referent_schema='hexmedia', ondelete='RESTRICT')
    op.create_foreign_key(op.f('fk_tag_group_id_tag_group'), 'tag', 'tag_group', ['group_id'], ['id'], source_schema='hexmedia', referent_schema='hexmedia', ondelete='SET NULL')
    op.create_check_constraint(
        'ck_tag_parent_requires_group',
        'tag',
        '(parent_id IS NULL) OR (group_id IS NOT NULL)',
        schema='hexmedia',
    )

    op.drop_column('tag', 'path', schema='hexmedia')
    op.drop_column('tag', 'is_deprecated', schema='hexmedia')
    op.create_index('ix_tag_group_path', 'tag_group', ['path'], unique=False, schema='hexmedia')
    op.create_index('ix_tag_group_parent_key', 'tag_group', ['parent_id', 'key'], unique=False, schema='hexmedia')
    op.create_index('ix_tag_parent', 'tag', ['parent_id'], unique=False, schema='hexmedia')
    op.create_index('ix_tag_group_depth', 'tag_group', ['depth'], schema='hexmedia')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tag_group_depth', table_name='tag_group', schema='hexmedia')
    op.drop_index('ix_tag_parent', table_name='tag', schema='hexmedia')
    op.drop_index('ix_tag_group_parent_key', table_name='tag_group', schema='hexmedia')
    op.drop_index('ix_tag_group_path', table_name='tag_group', schema='hexmedia')
    op.drop_constraint('ck_tag_parent_requires_group', 'tag', schema='hexmedia', type_='check')
    op.add_column('tag', sa.Column('is_deprecated', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False), schema='hexmedia')
    op.add_column('tag', sa.Column('path', sa.TEXT(), autoincrement=False, nullable=False), schema='hexmedia')
    op.drop_constraint(op.f('fk_tag_group_id_tag_group'), 'tag', schema='hexmedia', type_='foreignkey')
    op.drop_constraint(op.f('fk_tag_parent_id_tag'), 'tag', schema='hexmedia', type_='foreignkey')
    op.drop_constraint('uq_tag_group_slug', 'tag', schema='hexmedia', type_='unique')
    op.alter_column('tag', 'name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False,
               schema='hexmedia')
    op.drop_column('tag', 'parent_id', schema='hexmedia')
    op.drop_column('tag', 'description', schema='hexmedia')
    op.drop_column('tag', 'slug', schema='hexmedia')
    op.drop_column('tag', 'group_id', schema='hexmedia')
    op.drop_constraint('uq_media_tag_item_tag', 'media_tag', schema='hexmedia', type_='unique')
    op.drop_table('tag_group', schema='hexmedia')

    op.execute("DROP TYPE IF EXISTS tag_cardinality;")
    # ### end Alembic commands ###
